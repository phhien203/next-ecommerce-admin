// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name   String
  userId String

  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[]  @relation("StoreToCategory")
  sizes      Size[]      @relation("StoreToSize")
  colors     Color[]     @relation("StoreToColor")
  products   Product[]   @relation("StoreToProduct")
  orders     Order[]     @relation("StoreToOrder")
}

model Billboard {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  storeId String
  store   Store  @relation("StoreToBillboard", fields: [storeId], references: [id])

  label      String
  imageUrl   String
  categories Category[]

  @@index([storeId])
}

model Category {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  storeId String
  store   Store  @relation("StoreToCategory", fields: [storeId], references: [id])

  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])

  products Product[] @relation("CategoryToProduct")

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  value String

  storeId String
  store   Store  @relation("StoreToSize", fields: [storeId], references: [id])

  products Product[]

  @@index([storeId])
}

model Color {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  value String

  storeId String
  store   Store  @relation("StoreToColor", fields: [storeId], references: [id])

  products Product[]

  @@index([storeId])
}

model Product {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name       String
  price      Decimal
  isFeatured Boolean
  isArchived Boolean

  storeId String
  store   Store  @relation("StoreToProduct", fields: [storeId], references: [id])

  categoryId String
  category   Category @relation("CategoryToProduct", fields: [categoryId], references: [id])

  sizeId String
  size   Size   @relation(fields: [sizeId], references: [id])

  colorId String
  color   Color  @relation(fields: [colorId], references: [id])

  images Image[]

  orderItems OrderItem[]

  @@index([storeId])
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}

model Image {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url String

  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@index([productId])
}

model Order {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  isPaid  Boolean @default(false)
  phone   String  @default("")
  address String  @default("")

  storeId String
  store   Store  @relation("StoreToOrder", fields: [storeId], references: [id])

  orderItems OrderItem[]

  @@index([storeId])
}

model OrderItem {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  quantity Int @default(1)

  orderId String
  order   Order  @relation(fields: [orderId], references: [id])

  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}
